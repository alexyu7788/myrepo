/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: models2.proto */

#ifndef PROTOBUF_C_models2_2eproto__INCLUDED
#define PROTOBUF_C_models2_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _FCWS__Para FCWS__Para;
typedef struct _FCWS__Local FCWS__Local;
typedef struct _FCWS__VehicleModel FCWS__VehicleModel;
typedef struct _FCWS__Models FCWS__Models;


/* --- enums --- */

typedef enum _FCWS__Para__Type {
  FCWS__PARA__TYPE__UnKonwn = -1,
  FCWS__PARA__TYPE__PCA = 0,
  FCWS__PARA__TYPE__ICA = 1,
  FCWS__PARA__TYPE__TOTAL = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(FCWS__PARA__TYPE)
} FCWS__Para__Type;
typedef enum _FCWS__Local__Type {
  FCWS__LOCAL__TYPE__UnKonwn = -1,
  FCWS__LOCAL__TYPE__LEFT = 0,
  FCWS__LOCAL__TYPE__RIGHT = 1,
  FCWS__LOCAL__TYPE__CENTER = 2,
  FCWS__LOCAL__TYPE__TOTAL = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(FCWS__LOCAL__TYPE)
} FCWS__Local__Type;
typedef enum _FCWS__VehicleModel__Type {
  FCWS__VEHICLE__MODEL__TYPE__UnKonwn = -1,
  FCWS__VEHICLE__MODEL__TYPE__Compact = 0,
  FCWS__VEHICLE__MODEL__TYPE__Midsize = 1,
  FCWS__VEHICLE__MODEL__TYPE__Large = 2,
  FCWS__VEHICLE__MODEL__TYPE__SUV = 3,
  FCWS__VEHICLE__MODEL__TYPE__BUS = 4,
  FCWS__VEHICLE__MODEL__TYPE__TRUCK = 5,
  FCWS__VEHICLE__MODEL__TYPE__MOTOCYCLE = 6,
  FCWS__VEHICLE__MODEL__TYPE__BYCYCLE = 7,
  FCWS__VEHICLE__MODEL__TYPE__TOTAL = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(FCWS__VEHICLE__MODEL__TYPE)
} FCWS__VehicleModel__Type;

/* --- messages --- */

struct  _FCWS__Para
{
  ProtobufCMessage base;
  FCWS__Para__Type type;
  int32_t rows;
  int32_t cols;
  size_t n_data;
  double *data;
};
#define FCWS__PARA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&fcws__para__descriptor) \
    , FCWS__PARA__TYPE__UnKonwn, 0, 0, 0,NULL }


struct  _FCWS__Local
{
  ProtobufCMessage base;
  FCWS__Local__Type local;
  size_t n_para;
  FCWS__Para **para;
};
#define FCWS__LOCAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&fcws__local__descriptor) \
    , FCWS__LOCAL__TYPE__UnKonwn, 0,NULL }


/*
 * vehicle model 
 */
struct  _FCWS__VehicleModel
{
  ProtobufCMessage base;
  FCWS__VehicleModel__Type type;
  size_t n_local;
  FCWS__Local **local;
};
#define FCWS__VEHICLE__MODEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&fcws__vehicle__model__descriptor) \
    , FCWS__VEHICLE__MODEL__TYPE__UnKonwn, 0,NULL }


/*
 * Models 
 */
struct  _FCWS__Models
{
  ProtobufCMessage base;
  size_t n_vm;
  FCWS__VehicleModel **vm;
};
#define FCWS__MODELS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&fcws__models__descriptor) \
    , 0,NULL }


/* FCWS__Para methods */
void   fcws__para__init
                     (FCWS__Para         *message);
size_t fcws__para__get_packed_size
                     (const FCWS__Para   *message);
size_t fcws__para__pack
                     (const FCWS__Para   *message,
                      uint8_t             *out);
size_t fcws__para__pack_to_buffer
                     (const FCWS__Para   *message,
                      ProtobufCBuffer     *buffer);
FCWS__Para *
       fcws__para__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   fcws__para__free_unpacked
                     (FCWS__Para *message,
                      ProtobufCAllocator *allocator);
/* FCWS__Local methods */
void   fcws__local__init
                     (FCWS__Local         *message);
size_t fcws__local__get_packed_size
                     (const FCWS__Local   *message);
size_t fcws__local__pack
                     (const FCWS__Local   *message,
                      uint8_t             *out);
size_t fcws__local__pack_to_buffer
                     (const FCWS__Local   *message,
                      ProtobufCBuffer     *buffer);
FCWS__Local *
       fcws__local__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   fcws__local__free_unpacked
                     (FCWS__Local *message,
                      ProtobufCAllocator *allocator);
/* FCWS__VehicleModel methods */
void   fcws__vehicle__model__init
                     (FCWS__VehicleModel         *message);
size_t fcws__vehicle__model__get_packed_size
                     (const FCWS__VehicleModel   *message);
size_t fcws__vehicle__model__pack
                     (const FCWS__VehicleModel   *message,
                      uint8_t             *out);
size_t fcws__vehicle__model__pack_to_buffer
                     (const FCWS__VehicleModel   *message,
                      ProtobufCBuffer     *buffer);
FCWS__VehicleModel *
       fcws__vehicle__model__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   fcws__vehicle__model__free_unpacked
                     (FCWS__VehicleModel *message,
                      ProtobufCAllocator *allocator);
/* FCWS__Models methods */
void   fcws__models__init
                     (FCWS__Models         *message);
size_t fcws__models__get_packed_size
                     (const FCWS__Models   *message);
size_t fcws__models__pack
                     (const FCWS__Models   *message,
                      uint8_t             *out);
size_t fcws__models__pack_to_buffer
                     (const FCWS__Models   *message,
                      ProtobufCBuffer     *buffer);
FCWS__Models *
       fcws__models__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   fcws__models__free_unpacked
                     (FCWS__Models *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*FCWS__Para_Closure)
                 (const FCWS__Para *message,
                  void *closure_data);
typedef void (*FCWS__Local_Closure)
                 (const FCWS__Local *message,
                  void *closure_data);
typedef void (*FCWS__VehicleModel_Closure)
                 (const FCWS__VehicleModel *message,
                  void *closure_data);
typedef void (*FCWS__Models_Closure)
                 (const FCWS__Models *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor fcws__para__descriptor;
extern const ProtobufCEnumDescriptor    fcws__para__type__descriptor;
extern const ProtobufCMessageDescriptor fcws__local__descriptor;
extern const ProtobufCEnumDescriptor    fcws__local__type__descriptor;
extern const ProtobufCMessageDescriptor fcws__vehicle__model__descriptor;
extern const ProtobufCEnumDescriptor    fcws__vehicle__model__type__descriptor;
extern const ProtobufCMessageDescriptor fcws__models__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_models2_2eproto__INCLUDED */
