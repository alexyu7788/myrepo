// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: models2.proto

#include "models2.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace FCWS {
class ParaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Para>
      _instance;
} _Para_default_instance_;
class LocalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Local>
      _instance;
} _Local_default_instance_;
class Vehicle_ModelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vehicle_Model>
      _instance;
} _Vehicle_Model_default_instance_;
class ModelsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Models>
      _instance;
} _Models_default_instance_;
}  // namespace FCWS
namespace protobuf_models2_2eproto {
void InitDefaultsParaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::FCWS::_Para_default_instance_;
    new (ptr) ::FCWS::Para();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FCWS::Para::InitAsDefaultInstance();
}

void InitDefaultsPara() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsParaImpl);
}

void InitDefaultsLocalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_models2_2eproto::InitDefaultsPara();
  {
    void* ptr = &::FCWS::_Local_default_instance_;
    new (ptr) ::FCWS::Local();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FCWS::Local::InitAsDefaultInstance();
}

void InitDefaultsLocal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLocalImpl);
}

void InitDefaultsVehicle_ModelImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_models2_2eproto::InitDefaultsLocal();
  {
    void* ptr = &::FCWS::_Vehicle_Model_default_instance_;
    new (ptr) ::FCWS::Vehicle_Model();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FCWS::Vehicle_Model::InitAsDefaultInstance();
}

void InitDefaultsVehicle_Model() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVehicle_ModelImpl);
}

void InitDefaultsModelsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_models2_2eproto::InitDefaultsVehicle_Model();
  {
    void* ptr = &::FCWS::_Models_default_instance_;
    new (ptr) ::FCWS::Models();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FCWS::Models::InitAsDefaultInstance();
}

void InitDefaultsModels() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsModelsImpl);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FCWS::Para, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FCWS::Para, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FCWS::Para, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FCWS::Para, rows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FCWS::Para, cols_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FCWS::Para, data_),
  2,
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FCWS::Local, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FCWS::Local, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FCWS::Local, local_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FCWS::Local, para_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FCWS::Vehicle_Model, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FCWS::Vehicle_Model, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FCWS::Vehicle_Model, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FCWS::Vehicle_Model, local_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FCWS::Models, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FCWS::Models, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FCWS::Models, vm_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::FCWS::Para)},
  { 13, 20, sizeof(::FCWS::Local)},
  { 22, 29, sizeof(::FCWS::Vehicle_Model)},
  { 31, 37, sizeof(::FCWS::Models)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::FCWS::_Para_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FCWS::_Local_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FCWS::_Vehicle_Model_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FCWS::_Models_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "models2.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rmodels2.proto\022\004FCWS\"\227\001\n\004Para\022&\n\004type\030\001"
      " \002(\0162\017.FCWS.Para.Type:\007UnKonwn\022\014\n\004rows\030\002"
      " \002(\005\022\014\n\004cols\030\003 \002(\005\022\020\n\004data\030\004 \003(\001B\002\020\001\"9\n\004"
      "Type\022\024\n\007UnKonwn\020\377\377\377\377\377\377\377\377\377\001\022\007\n\003PCA\020\000\022\007\n\003I"
      "CA\020\001\022\t\n\005TOTAL\020\002\"\225\001\n\005Local\022(\n\005local\030\001 \002(\016"
      "2\020.FCWS.Local.Type:\007UnKonwn\022\030\n\004para\030\002 \003("
      "\0132\n.FCWS.Para\"H\n\004Type\022\024\n\007UnKonwn\020\377\377\377\377\377\377\377"
      "\377\377\001\022\010\n\004LEFT\020\000\022\t\n\005RIGHT\020\001\022\n\n\006CENTER\020\002\022\t\n\005"
      "TOTAL\020\003\"\344\001\n\rVehicle_Model\022/\n\004type\030\001 \002(\0162"
      "\030.FCWS.Vehicle_Model.Type:\007UnKonwn\022\032\n\005lo"
      "cal\030\002 \003(\0132\013.FCWS.Local\"\205\001\n\004Type\022\024\n\007UnKon"
      "wn\020\377\377\377\377\377\377\377\377\377\001\022\013\n\007Compact\020\000\022\013\n\007Midsize\020\001\022"
      "\t\n\005Large\020\002\022\007\n\003SUV\020\003\022\007\n\003BUS\020\004\022\t\n\005TRUCK\020\005\022"
      "\r\n\tMOTOCYCLE\020\006\022\013\n\007BYCYCLE\020\007\022\t\n\005TOTAL\020\010\")"
      "\n\006Models\022\037\n\002vm\030\001 \003(\0132\023.FCWS.Vehicle_Mode"
      "l"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 601);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "models2.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_models2_2eproto
namespace FCWS {
const ::google::protobuf::EnumDescriptor* Para_Type_descriptor() {
  protobuf_models2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_models2_2eproto::file_level_enum_descriptors[0];
}
bool Para_Type_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Para_Type Para::UnKonwn;
const Para_Type Para::PCA;
const Para_Type Para::ICA;
const Para_Type Para::TOTAL;
const Para_Type Para::Type_MIN;
const Para_Type Para::Type_MAX;
const int Para::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Local_Type_descriptor() {
  protobuf_models2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_models2_2eproto::file_level_enum_descriptors[1];
}
bool Local_Type_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Local_Type Local::UnKonwn;
const Local_Type Local::LEFT;
const Local_Type Local::RIGHT;
const Local_Type Local::CENTER;
const Local_Type Local::TOTAL;
const Local_Type Local::Type_MIN;
const Local_Type Local::Type_MAX;
const int Local::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Vehicle_Model_Type_descriptor() {
  protobuf_models2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_models2_2eproto::file_level_enum_descriptors[2];
}
bool Vehicle_Model_Type_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Vehicle_Model_Type Vehicle_Model::UnKonwn;
const Vehicle_Model_Type Vehicle_Model::Compact;
const Vehicle_Model_Type Vehicle_Model::Midsize;
const Vehicle_Model_Type Vehicle_Model::Large;
const Vehicle_Model_Type Vehicle_Model::SUV;
const Vehicle_Model_Type Vehicle_Model::BUS;
const Vehicle_Model_Type Vehicle_Model::TRUCK;
const Vehicle_Model_Type Vehicle_Model::MOTOCYCLE;
const Vehicle_Model_Type Vehicle_Model::BYCYCLE;
const Vehicle_Model_Type Vehicle_Model::TOTAL;
const Vehicle_Model_Type Vehicle_Model::Type_MIN;
const Vehicle_Model_Type Vehicle_Model::Type_MAX;
const int Vehicle_Model::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Para::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Para::kTypeFieldNumber;
const int Para::kRowsFieldNumber;
const int Para::kColsFieldNumber;
const int Para::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Para::Para()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_models2_2eproto::InitDefaultsPara();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FCWS.Para)
}
Para::Para(const Para& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rows_, &from.rows_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&rows_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:FCWS.Para)
}

void Para::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&rows_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cols_) -
      reinterpret_cast<char*>(&rows_)) + sizeof(cols_));
  type_ = -1;
}

Para::~Para() {
  // @@protoc_insertion_point(destructor:FCWS.Para)
  SharedDtor();
}

void Para::SharedDtor() {
}

void Para::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Para::descriptor() {
  ::protobuf_models2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_models2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Para& Para::default_instance() {
  ::protobuf_models2_2eproto::InitDefaultsPara();
  return *internal_default_instance();
}


void Para::Clear() {
// @@protoc_insertion_point(message_clear_start:FCWS.Para)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&rows_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cols_) -
        reinterpret_cast<char*>(&rows_)) + sizeof(cols_));
    type_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Para::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FCWS.Para)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .FCWS.Para.Type type = 1 [default = UnKonwn];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::FCWS::Para_Type_IsValid(value)) {
            set_type(static_cast< ::FCWS::Para_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 rows = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_rows();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rows_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cols = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_cols();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cols_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double data = 4 [packed = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_data())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 34u, input, this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FCWS.Para)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FCWS.Para)
  return false;
#undef DO_
}

void Para::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FCWS.Para)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .FCWS.Para.Type type = 1 [default = UnKonwn];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required int32 rows = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rows(), output);
  }

  // required int32 cols = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cols(), output);
  }

  // repeated double data = 4 [packed = true];
  if (this->data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _data_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->data().data(), this->data_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FCWS.Para)
}

::google::protobuf::uint8* Para::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FCWS.Para)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .FCWS.Para.Type type = 1 [default = UnKonwn];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required int32 rows = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rows(), target);
  }

  // required int32 cols = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cols(), target);
  }

  // repeated double data = 4 [packed = true];
  if (this->data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _data_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->data_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FCWS.Para)
  return target;
}

size_t Para::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:FCWS.Para)
  size_t total_size = 0;

  if (has_rows()) {
    // required int32 rows = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rows());
  }

  if (has_cols()) {
    // required int32 cols = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cols());
  }

  if (has_type()) {
    // required .FCWS.Para.Type type = 1 [default = UnKonwn];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t Para::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FCWS.Para)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 rows = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rows());

    // required int32 cols = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cols());

    // required .FCWS.Para.Type type = 1 [default = UnKonwn];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated double data = 4 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _data_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Para::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FCWS.Para)
  GOOGLE_DCHECK_NE(&from, this);
  const Para* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Para>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FCWS.Para)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FCWS.Para)
    MergeFrom(*source);
  }
}

void Para::MergeFrom(const Para& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FCWS.Para)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      rows_ = from.rows_;
    }
    if (cached_has_bits & 0x00000002u) {
      cols_ = from.cols_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Para::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FCWS.Para)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Para::CopyFrom(const Para& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FCWS.Para)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Para::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Para::Swap(Para* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Para::InternalSwap(Para* other) {
  using std::swap;
  data_.InternalSwap(&other->data_);
  swap(rows_, other->rows_);
  swap(cols_, other->cols_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Para::GetMetadata() const {
  protobuf_models2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_models2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Local::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Local::kLocalFieldNumber;
const int Local::kParaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Local::Local()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_models2_2eproto::InitDefaultsLocal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FCWS.Local)
}
Local::Local(const Local& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      para_(from.para_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  local_ = from.local_;
  // @@protoc_insertion_point(copy_constructor:FCWS.Local)
}

void Local::SharedCtor() {
  _cached_size_ = 0;
  local_ = -1;
}

Local::~Local() {
  // @@protoc_insertion_point(destructor:FCWS.Local)
  SharedDtor();
}

void Local::SharedDtor() {
}

void Local::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Local::descriptor() {
  ::protobuf_models2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_models2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Local& Local::default_instance() {
  ::protobuf_models2_2eproto::InitDefaultsLocal();
  return *internal_default_instance();
}


void Local::Clear() {
// @@protoc_insertion_point(message_clear_start:FCWS.Local)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  para_.Clear();
  local_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Local::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FCWS.Local)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .FCWS.Local.Type local = 1 [default = UnKonwn];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::FCWS::Local_Type_IsValid(value)) {
            set_local(static_cast< ::FCWS::Local_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .FCWS.Para para = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_para()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FCWS.Local)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FCWS.Local)
  return false;
#undef DO_
}

void Local::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FCWS.Local)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .FCWS.Local.Type local = 1 [default = UnKonwn];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->local(), output);
  }

  // repeated .FCWS.Para para = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->para_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->para(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FCWS.Local)
}

::google::protobuf::uint8* Local::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FCWS.Local)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .FCWS.Local.Type local = 1 [default = UnKonwn];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->local(), target);
  }

  // repeated .FCWS.Para para = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->para_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->para(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FCWS.Local)
  return target;
}

size_t Local::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FCWS.Local)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .FCWS.Local.Type local = 1 [default = UnKonwn];
  if (has_local()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->local());
  }
  // repeated .FCWS.Para para = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->para_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->para(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Local::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FCWS.Local)
  GOOGLE_DCHECK_NE(&from, this);
  const Local* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Local>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FCWS.Local)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FCWS.Local)
    MergeFrom(*source);
  }
}

void Local::MergeFrom(const Local& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FCWS.Local)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  para_.MergeFrom(from.para_);
  if (from.has_local()) {
    set_local(from.local());
  }
}

void Local::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FCWS.Local)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Local::CopyFrom(const Local& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FCWS.Local)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Local::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->para())) return false;
  return true;
}

void Local::Swap(Local* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Local::InternalSwap(Local* other) {
  using std::swap;
  CastToBase(&para_)->InternalSwap(CastToBase(&other->para_));
  swap(local_, other->local_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Local::GetMetadata() const {
  protobuf_models2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_models2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vehicle_Model::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vehicle_Model::kTypeFieldNumber;
const int Vehicle_Model::kLocalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vehicle_Model::Vehicle_Model()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_models2_2eproto::InitDefaultsVehicle_Model();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FCWS.Vehicle_Model)
}
Vehicle_Model::Vehicle_Model(const Vehicle_Model& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      local_(from.local_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:FCWS.Vehicle_Model)
}

void Vehicle_Model::SharedCtor() {
  _cached_size_ = 0;
  type_ = -1;
}

Vehicle_Model::~Vehicle_Model() {
  // @@protoc_insertion_point(destructor:FCWS.Vehicle_Model)
  SharedDtor();
}

void Vehicle_Model::SharedDtor() {
}

void Vehicle_Model::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vehicle_Model::descriptor() {
  ::protobuf_models2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_models2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vehicle_Model& Vehicle_Model::default_instance() {
  ::protobuf_models2_2eproto::InitDefaultsVehicle_Model();
  return *internal_default_instance();
}


void Vehicle_Model::Clear() {
// @@protoc_insertion_point(message_clear_start:FCWS.Vehicle_Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  local_.Clear();
  type_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vehicle_Model::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FCWS.Vehicle_Model)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .FCWS.Vehicle_Model.Type type = 1 [default = UnKonwn];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::FCWS::Vehicle_Model_Type_IsValid(value)) {
            set_type(static_cast< ::FCWS::Vehicle_Model_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .FCWS.Local local = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_local()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FCWS.Vehicle_Model)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FCWS.Vehicle_Model)
  return false;
#undef DO_
}

void Vehicle_Model::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FCWS.Vehicle_Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .FCWS.Vehicle_Model.Type type = 1 [default = UnKonwn];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // repeated .FCWS.Local local = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->local_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->local(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FCWS.Vehicle_Model)
}

::google::protobuf::uint8* Vehicle_Model::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FCWS.Vehicle_Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .FCWS.Vehicle_Model.Type type = 1 [default = UnKonwn];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // repeated .FCWS.Local local = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->local_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->local(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FCWS.Vehicle_Model)
  return target;
}

size_t Vehicle_Model::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FCWS.Vehicle_Model)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .FCWS.Vehicle_Model.Type type = 1 [default = UnKonwn];
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  // repeated .FCWS.Local local = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->local_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->local(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vehicle_Model::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FCWS.Vehicle_Model)
  GOOGLE_DCHECK_NE(&from, this);
  const Vehicle_Model* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vehicle_Model>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FCWS.Vehicle_Model)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FCWS.Vehicle_Model)
    MergeFrom(*source);
  }
}

void Vehicle_Model::MergeFrom(const Vehicle_Model& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FCWS.Vehicle_Model)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  local_.MergeFrom(from.local_);
  if (from.has_type()) {
    set_type(from.type());
  }
}

void Vehicle_Model::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FCWS.Vehicle_Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vehicle_Model::CopyFrom(const Vehicle_Model& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FCWS.Vehicle_Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vehicle_Model::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->local())) return false;
  return true;
}

void Vehicle_Model::Swap(Vehicle_Model* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vehicle_Model::InternalSwap(Vehicle_Model* other) {
  using std::swap;
  CastToBase(&local_)->InternalSwap(CastToBase(&other->local_));
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Vehicle_Model::GetMetadata() const {
  protobuf_models2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_models2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Models::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Models::kVmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Models::Models()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_models2_2eproto::InitDefaultsModels();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FCWS.Models)
}
Models::Models(const Models& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      vm_(from.vm_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:FCWS.Models)
}

void Models::SharedCtor() {
  _cached_size_ = 0;
}

Models::~Models() {
  // @@protoc_insertion_point(destructor:FCWS.Models)
  SharedDtor();
}

void Models::SharedDtor() {
}

void Models::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Models::descriptor() {
  ::protobuf_models2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_models2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Models& Models::default_instance() {
  ::protobuf_models2_2eproto::InitDefaultsModels();
  return *internal_default_instance();
}


void Models::Clear() {
// @@protoc_insertion_point(message_clear_start:FCWS.Models)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vm_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Models::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FCWS.Models)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .FCWS.Vehicle_Model vm = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FCWS.Models)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FCWS.Models)
  return false;
#undef DO_
}

void Models::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FCWS.Models)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .FCWS.Vehicle_Model vm = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vm_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->vm(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FCWS.Models)
}

::google::protobuf::uint8* Models::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FCWS.Models)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .FCWS.Vehicle_Model vm = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vm_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->vm(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FCWS.Models)
  return target;
}

size_t Models::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FCWS.Models)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .FCWS.Vehicle_Model vm = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->vm_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vm(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Models::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FCWS.Models)
  GOOGLE_DCHECK_NE(&from, this);
  const Models* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Models>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FCWS.Models)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FCWS.Models)
    MergeFrom(*source);
  }
}

void Models::MergeFrom(const Models& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FCWS.Models)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vm_.MergeFrom(from.vm_);
}

void Models::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FCWS.Models)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Models::CopyFrom(const Models& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FCWS.Models)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Models::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->vm())) return false;
  return true;
}

void Models::Swap(Models* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Models::InternalSwap(Models* other) {
  using std::swap;
  CastToBase(&vm_)->InternalSwap(CastToBase(&other->vm_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Models::GetMetadata() const {
  protobuf_models2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_models2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace FCWS
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FCWS::Para* Arena::Create< ::FCWS::Para >(Arena* arena) {
  return Arena::CreateInternal< ::FCWS::Para >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FCWS::Local* Arena::Create< ::FCWS::Local >(Arena* arena) {
  return Arena::CreateInternal< ::FCWS::Local >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FCWS::Vehicle_Model* Arena::Create< ::FCWS::Vehicle_Model >(Arena* arena) {
  return Arena::CreateInternal< ::FCWS::Vehicle_Model >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FCWS::Models* Arena::Create< ::FCWS::Models >(Arena* arena) {
  return Arena::CreateInternal< ::FCWS::Models >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
