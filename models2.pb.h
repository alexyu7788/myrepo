// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: models2.proto

#ifndef PROTOBUF_models2_2eproto_INCLUDED
#define PROTOBUF_models2_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_models2_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsParaImpl();
void InitDefaultsPara();
void InitDefaultsLocalImpl();
void InitDefaultsLocal();
void InitDefaultsVehicle_ModelImpl();
void InitDefaultsVehicle_Model();
void InitDefaultsModelsImpl();
void InitDefaultsModels();
inline void InitDefaults() {
  InitDefaultsPara();
  InitDefaultsLocal();
  InitDefaultsVehicle_Model();
  InitDefaultsModels();
}
}  // namespace protobuf_models2_2eproto
namespace FCWS {
class Local;
class LocalDefaultTypeInternal;
extern LocalDefaultTypeInternal _Local_default_instance_;
class Models;
class ModelsDefaultTypeInternal;
extern ModelsDefaultTypeInternal _Models_default_instance_;
class Para;
class ParaDefaultTypeInternal;
extern ParaDefaultTypeInternal _Para_default_instance_;
class Vehicle_Model;
class Vehicle_ModelDefaultTypeInternal;
extern Vehicle_ModelDefaultTypeInternal _Vehicle_Model_default_instance_;
}  // namespace FCWS
namespace google {
namespace protobuf {
template<> ::FCWS::Local* Arena::Create< ::FCWS::Local>(Arena*);
template<> ::FCWS::Models* Arena::Create< ::FCWS::Models>(Arena*);
template<> ::FCWS::Para* Arena::Create< ::FCWS::Para>(Arena*);
template<> ::FCWS::Vehicle_Model* Arena::Create< ::FCWS::Vehicle_Model>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace FCWS {

enum Para_Type {
  Para_Type_UnKonwn = -1,
  Para_Type_PCA = 0,
  Para_Type_ICA = 1,
  Para_Type_TOTAL = 2
};
bool Para_Type_IsValid(int value);
const Para_Type Para_Type_Type_MIN = Para_Type_UnKonwn;
const Para_Type Para_Type_Type_MAX = Para_Type_TOTAL;
const int Para_Type_Type_ARRAYSIZE = Para_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Para_Type_descriptor();
inline const ::std::string& Para_Type_Name(Para_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Para_Type_descriptor(), value);
}
inline bool Para_Type_Parse(
    const ::std::string& name, Para_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Para_Type>(
    Para_Type_descriptor(), name, value);
}
enum Local_Type {
  Local_Type_UnKonwn = -1,
  Local_Type_LEFT = 0,
  Local_Type_RIGHT = 1,
  Local_Type_CENTER = 2,
  Local_Type_TOTAL = 3
};
bool Local_Type_IsValid(int value);
const Local_Type Local_Type_Type_MIN = Local_Type_UnKonwn;
const Local_Type Local_Type_Type_MAX = Local_Type_TOTAL;
const int Local_Type_Type_ARRAYSIZE = Local_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Local_Type_descriptor();
inline const ::std::string& Local_Type_Name(Local_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Local_Type_descriptor(), value);
}
inline bool Local_Type_Parse(
    const ::std::string& name, Local_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Local_Type>(
    Local_Type_descriptor(), name, value);
}
enum Vehicle_Model_Type {
  Vehicle_Model_Type_UnKonwn = -1,
  Vehicle_Model_Type_Compact = 0,
  Vehicle_Model_Type_Midsize = 1,
  Vehicle_Model_Type_Large = 2,
  Vehicle_Model_Type_SUV = 3,
  Vehicle_Model_Type_BUS = 4,
  Vehicle_Model_Type_TRUCK = 5,
  Vehicle_Model_Type_MOTOCYCLE = 6,
  Vehicle_Model_Type_BYCYCLE = 7,
  Vehicle_Model_Type_TOTAL = 8
};
bool Vehicle_Model_Type_IsValid(int value);
const Vehicle_Model_Type Vehicle_Model_Type_Type_MIN = Vehicle_Model_Type_UnKonwn;
const Vehicle_Model_Type Vehicle_Model_Type_Type_MAX = Vehicle_Model_Type_TOTAL;
const int Vehicle_Model_Type_Type_ARRAYSIZE = Vehicle_Model_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Vehicle_Model_Type_descriptor();
inline const ::std::string& Vehicle_Model_Type_Name(Vehicle_Model_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Vehicle_Model_Type_descriptor(), value);
}
inline bool Vehicle_Model_Type_Parse(
    const ::std::string& name, Vehicle_Model_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Vehicle_Model_Type>(
    Vehicle_Model_Type_descriptor(), name, value);
}
// ===================================================================

class Para : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FCWS.Para) */ {
 public:
  Para();
  virtual ~Para();

  Para(const Para& from);

  inline Para& operator=(const Para& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Para(Para&& from) noexcept
    : Para() {
    *this = ::std::move(from);
  }

  inline Para& operator=(Para&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Para& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Para* internal_default_instance() {
    return reinterpret_cast<const Para*>(
               &_Para_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Para* other);
  friend void swap(Para& a, Para& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Para* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Para>(NULL);
  }

  Para* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Para>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Para& from);
  void MergeFrom(const Para& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Para* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Para_Type Type;
  static const Type UnKonwn =
    Para_Type_UnKonwn;
  static const Type PCA =
    Para_Type_PCA;
  static const Type ICA =
    Para_Type_ICA;
  static const Type TOTAL =
    Para_Type_TOTAL;
  static inline bool Type_IsValid(int value) {
    return Para_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Para_Type_Type_MIN;
  static const Type Type_MAX =
    Para_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Para_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Para_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Para_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Para_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated double data = 4 [packed = true];
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 4;
  double data(int index) const;
  void set_data(int index, double value);
  void add_data(double value);
  const ::google::protobuf::RepeatedField< double >&
      data() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_data();

  // required int32 rows = 2;
  bool has_rows() const;
  void clear_rows();
  static const int kRowsFieldNumber = 2;
  ::google::protobuf::int32 rows() const;
  void set_rows(::google::protobuf::int32 value);

  // required int32 cols = 3;
  bool has_cols() const;
  void clear_cols();
  static const int kColsFieldNumber = 3;
  ::google::protobuf::int32 cols() const;
  void set_cols(::google::protobuf::int32 value);

  // required .FCWS.Para.Type type = 1 [default = UnKonwn];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::FCWS::Para_Type type() const;
  void set_type(::FCWS::Para_Type value);

  // @@protoc_insertion_point(class_scope:FCWS.Para)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_rows();
  void clear_has_rows();
  void set_has_cols();
  void clear_has_cols();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< double > data_;
  mutable int _data_cached_byte_size_;
  ::google::protobuf::int32 rows_;
  ::google::protobuf::int32 cols_;
  int type_;
  friend struct ::protobuf_models2_2eproto::TableStruct;
  friend void ::protobuf_models2_2eproto::InitDefaultsParaImpl();
};
// -------------------------------------------------------------------

class Local : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FCWS.Local) */ {
 public:
  Local();
  virtual ~Local();

  Local(const Local& from);

  inline Local& operator=(const Local& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Local(Local&& from) noexcept
    : Local() {
    *this = ::std::move(from);
  }

  inline Local& operator=(Local&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Local& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Local* internal_default_instance() {
    return reinterpret_cast<const Local*>(
               &_Local_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Local* other);
  friend void swap(Local& a, Local& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Local* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Local>(NULL);
  }

  Local* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Local>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Local& from);
  void MergeFrom(const Local& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Local* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Local_Type Type;
  static const Type UnKonwn =
    Local_Type_UnKonwn;
  static const Type LEFT =
    Local_Type_LEFT;
  static const Type RIGHT =
    Local_Type_RIGHT;
  static const Type CENTER =
    Local_Type_CENTER;
  static const Type TOTAL =
    Local_Type_TOTAL;
  static inline bool Type_IsValid(int value) {
    return Local_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Local_Type_Type_MIN;
  static const Type Type_MAX =
    Local_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Local_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Local_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Local_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Local_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .FCWS.Para para = 2;
  int para_size() const;
  void clear_para();
  static const int kParaFieldNumber = 2;
  ::FCWS::Para* mutable_para(int index);
  ::google::protobuf::RepeatedPtrField< ::FCWS::Para >*
      mutable_para();
  const ::FCWS::Para& para(int index) const;
  ::FCWS::Para* add_para();
  const ::google::protobuf::RepeatedPtrField< ::FCWS::Para >&
      para() const;

  // required .FCWS.Local.Type local = 1 [default = UnKonwn];
  bool has_local() const;
  void clear_local();
  static const int kLocalFieldNumber = 1;
  ::FCWS::Local_Type local() const;
  void set_local(::FCWS::Local_Type value);

  // @@protoc_insertion_point(class_scope:FCWS.Local)
 private:
  void set_has_local();
  void clear_has_local();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::FCWS::Para > para_;
  int local_;
  friend struct ::protobuf_models2_2eproto::TableStruct;
  friend void ::protobuf_models2_2eproto::InitDefaultsLocalImpl();
};
// -------------------------------------------------------------------

class Vehicle_Model : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FCWS.Vehicle_Model) */ {
 public:
  Vehicle_Model();
  virtual ~Vehicle_Model();

  Vehicle_Model(const Vehicle_Model& from);

  inline Vehicle_Model& operator=(const Vehicle_Model& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vehicle_Model(Vehicle_Model&& from) noexcept
    : Vehicle_Model() {
    *this = ::std::move(from);
  }

  inline Vehicle_Model& operator=(Vehicle_Model&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Vehicle_Model& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Vehicle_Model* internal_default_instance() {
    return reinterpret_cast<const Vehicle_Model*>(
               &_Vehicle_Model_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Vehicle_Model* other);
  friend void swap(Vehicle_Model& a, Vehicle_Model& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vehicle_Model* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Vehicle_Model>(NULL);
  }

  Vehicle_Model* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Vehicle_Model>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Vehicle_Model& from);
  void MergeFrom(const Vehicle_Model& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vehicle_Model* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Vehicle_Model_Type Type;
  static const Type UnKonwn =
    Vehicle_Model_Type_UnKonwn;
  static const Type Compact =
    Vehicle_Model_Type_Compact;
  static const Type Midsize =
    Vehicle_Model_Type_Midsize;
  static const Type Large =
    Vehicle_Model_Type_Large;
  static const Type SUV =
    Vehicle_Model_Type_SUV;
  static const Type BUS =
    Vehicle_Model_Type_BUS;
  static const Type TRUCK =
    Vehicle_Model_Type_TRUCK;
  static const Type MOTOCYCLE =
    Vehicle_Model_Type_MOTOCYCLE;
  static const Type BYCYCLE =
    Vehicle_Model_Type_BYCYCLE;
  static const Type TOTAL =
    Vehicle_Model_Type_TOTAL;
  static inline bool Type_IsValid(int value) {
    return Vehicle_Model_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Vehicle_Model_Type_Type_MIN;
  static const Type Type_MAX =
    Vehicle_Model_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Vehicle_Model_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Vehicle_Model_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Vehicle_Model_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Vehicle_Model_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .FCWS.Local local = 2;
  int local_size() const;
  void clear_local();
  static const int kLocalFieldNumber = 2;
  ::FCWS::Local* mutable_local(int index);
  ::google::protobuf::RepeatedPtrField< ::FCWS::Local >*
      mutable_local();
  const ::FCWS::Local& local(int index) const;
  ::FCWS::Local* add_local();
  const ::google::protobuf::RepeatedPtrField< ::FCWS::Local >&
      local() const;

  // required .FCWS.Vehicle_Model.Type type = 1 [default = UnKonwn];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::FCWS::Vehicle_Model_Type type() const;
  void set_type(::FCWS::Vehicle_Model_Type value);

  // @@protoc_insertion_point(class_scope:FCWS.Vehicle_Model)
 private:
  void set_has_type();
  void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::FCWS::Local > local_;
  int type_;
  friend struct ::protobuf_models2_2eproto::TableStruct;
  friend void ::protobuf_models2_2eproto::InitDefaultsVehicle_ModelImpl();
};
// -------------------------------------------------------------------

class Models : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FCWS.Models) */ {
 public:
  Models();
  virtual ~Models();

  Models(const Models& from);

  inline Models& operator=(const Models& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Models(Models&& from) noexcept
    : Models() {
    *this = ::std::move(from);
  }

  inline Models& operator=(Models&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Models& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Models* internal_default_instance() {
    return reinterpret_cast<const Models*>(
               &_Models_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Models* other);
  friend void swap(Models& a, Models& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Models* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Models>(NULL);
  }

  Models* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Models>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Models& from);
  void MergeFrom(const Models& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Models* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .FCWS.Vehicle_Model vm = 1;
  int vm_size() const;
  void clear_vm();
  static const int kVmFieldNumber = 1;
  ::FCWS::Vehicle_Model* mutable_vm(int index);
  ::google::protobuf::RepeatedPtrField< ::FCWS::Vehicle_Model >*
      mutable_vm();
  const ::FCWS::Vehicle_Model& vm(int index) const;
  ::FCWS::Vehicle_Model* add_vm();
  const ::google::protobuf::RepeatedPtrField< ::FCWS::Vehicle_Model >&
      vm() const;

  // @@protoc_insertion_point(class_scope:FCWS.Models)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::FCWS::Vehicle_Model > vm_;
  friend struct ::protobuf_models2_2eproto::TableStruct;
  friend void ::protobuf_models2_2eproto::InitDefaultsModelsImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Para

// required .FCWS.Para.Type type = 1 [default = UnKonwn];
inline bool Para::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Para::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Para::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Para::clear_type() {
  type_ = -1;
  clear_has_type();
}
inline ::FCWS::Para_Type Para::type() const {
  // @@protoc_insertion_point(field_get:FCWS.Para.type)
  return static_cast< ::FCWS::Para_Type >(type_);
}
inline void Para::set_type(::FCWS::Para_Type value) {
  assert(::FCWS::Para_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:FCWS.Para.type)
}

// required int32 rows = 2;
inline bool Para::has_rows() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Para::set_has_rows() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Para::clear_has_rows() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Para::clear_rows() {
  rows_ = 0;
  clear_has_rows();
}
inline ::google::protobuf::int32 Para::rows() const {
  // @@protoc_insertion_point(field_get:FCWS.Para.rows)
  return rows_;
}
inline void Para::set_rows(::google::protobuf::int32 value) {
  set_has_rows();
  rows_ = value;
  // @@protoc_insertion_point(field_set:FCWS.Para.rows)
}

// required int32 cols = 3;
inline bool Para::has_cols() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Para::set_has_cols() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Para::clear_has_cols() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Para::clear_cols() {
  cols_ = 0;
  clear_has_cols();
}
inline ::google::protobuf::int32 Para::cols() const {
  // @@protoc_insertion_point(field_get:FCWS.Para.cols)
  return cols_;
}
inline void Para::set_cols(::google::protobuf::int32 value) {
  set_has_cols();
  cols_ = value;
  // @@protoc_insertion_point(field_set:FCWS.Para.cols)
}

// repeated double data = 4 [packed = true];
inline int Para::data_size() const {
  return data_.size();
}
inline void Para::clear_data() {
  data_.Clear();
}
inline double Para::data(int index) const {
  // @@protoc_insertion_point(field_get:FCWS.Para.data)
  return data_.Get(index);
}
inline void Para::set_data(int index, double value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:FCWS.Para.data)
}
inline void Para::add_data(double value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:FCWS.Para.data)
}
inline const ::google::protobuf::RepeatedField< double >&
Para::data() const {
  // @@protoc_insertion_point(field_list:FCWS.Para.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< double >*
Para::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:FCWS.Para.data)
  return &data_;
}

// -------------------------------------------------------------------

// Local

// required .FCWS.Local.Type local = 1 [default = UnKonwn];
inline bool Local::has_local() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Local::set_has_local() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Local::clear_has_local() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Local::clear_local() {
  local_ = -1;
  clear_has_local();
}
inline ::FCWS::Local_Type Local::local() const {
  // @@protoc_insertion_point(field_get:FCWS.Local.local)
  return static_cast< ::FCWS::Local_Type >(local_);
}
inline void Local::set_local(::FCWS::Local_Type value) {
  assert(::FCWS::Local_Type_IsValid(value));
  set_has_local();
  local_ = value;
  // @@protoc_insertion_point(field_set:FCWS.Local.local)
}

// repeated .FCWS.Para para = 2;
inline int Local::para_size() const {
  return para_.size();
}
inline void Local::clear_para() {
  para_.Clear();
}
inline ::FCWS::Para* Local::mutable_para(int index) {
  // @@protoc_insertion_point(field_mutable:FCWS.Local.para)
  return para_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::FCWS::Para >*
Local::mutable_para() {
  // @@protoc_insertion_point(field_mutable_list:FCWS.Local.para)
  return &para_;
}
inline const ::FCWS::Para& Local::para(int index) const {
  // @@protoc_insertion_point(field_get:FCWS.Local.para)
  return para_.Get(index);
}
inline ::FCWS::Para* Local::add_para() {
  // @@protoc_insertion_point(field_add:FCWS.Local.para)
  return para_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FCWS::Para >&
Local::para() const {
  // @@protoc_insertion_point(field_list:FCWS.Local.para)
  return para_;
}

// -------------------------------------------------------------------

// Vehicle_Model

// required .FCWS.Vehicle_Model.Type type = 1 [default = UnKonwn];
inline bool Vehicle_Model::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Vehicle_Model::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Vehicle_Model::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Vehicle_Model::clear_type() {
  type_ = -1;
  clear_has_type();
}
inline ::FCWS::Vehicle_Model_Type Vehicle_Model::type() const {
  // @@protoc_insertion_point(field_get:FCWS.Vehicle_Model.type)
  return static_cast< ::FCWS::Vehicle_Model_Type >(type_);
}
inline void Vehicle_Model::set_type(::FCWS::Vehicle_Model_Type value) {
  assert(::FCWS::Vehicle_Model_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:FCWS.Vehicle_Model.type)
}

// repeated .FCWS.Local local = 2;
inline int Vehicle_Model::local_size() const {
  return local_.size();
}
inline void Vehicle_Model::clear_local() {
  local_.Clear();
}
inline ::FCWS::Local* Vehicle_Model::mutable_local(int index) {
  // @@protoc_insertion_point(field_mutable:FCWS.Vehicle_Model.local)
  return local_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::FCWS::Local >*
Vehicle_Model::mutable_local() {
  // @@protoc_insertion_point(field_mutable_list:FCWS.Vehicle_Model.local)
  return &local_;
}
inline const ::FCWS::Local& Vehicle_Model::local(int index) const {
  // @@protoc_insertion_point(field_get:FCWS.Vehicle_Model.local)
  return local_.Get(index);
}
inline ::FCWS::Local* Vehicle_Model::add_local() {
  // @@protoc_insertion_point(field_add:FCWS.Vehicle_Model.local)
  return local_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FCWS::Local >&
Vehicle_Model::local() const {
  // @@protoc_insertion_point(field_list:FCWS.Vehicle_Model.local)
  return local_;
}

// -------------------------------------------------------------------

// Models

// repeated .FCWS.Vehicle_Model vm = 1;
inline int Models::vm_size() const {
  return vm_.size();
}
inline void Models::clear_vm() {
  vm_.Clear();
}
inline ::FCWS::Vehicle_Model* Models::mutable_vm(int index) {
  // @@protoc_insertion_point(field_mutable:FCWS.Models.vm)
  return vm_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::FCWS::Vehicle_Model >*
Models::mutable_vm() {
  // @@protoc_insertion_point(field_mutable_list:FCWS.Models.vm)
  return &vm_;
}
inline const ::FCWS::Vehicle_Model& Models::vm(int index) const {
  // @@protoc_insertion_point(field_get:FCWS.Models.vm)
  return vm_.Get(index);
}
inline ::FCWS::Vehicle_Model* Models::add_vm() {
  // @@protoc_insertion_point(field_add:FCWS.Models.vm)
  return vm_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FCWS::Vehicle_Model >&
Models::vm() const {
  // @@protoc_insertion_point(field_list:FCWS.Models.vm)
  return vm_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace FCWS

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::FCWS::Para_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FCWS::Para_Type>() {
  return ::FCWS::Para_Type_descriptor();
}
template <> struct is_proto_enum< ::FCWS::Local_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FCWS::Local_Type>() {
  return ::FCWS::Local_Type_descriptor();
}
template <> struct is_proto_enum< ::FCWS::Vehicle_Model_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FCWS::Vehicle_Model_Type>() {
  return ::FCWS::Vehicle_Model_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_models2_2eproto_INCLUDED
